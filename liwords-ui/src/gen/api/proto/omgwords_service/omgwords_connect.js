// @generated by protoc-gen-connect-es v1.4.0
// @generated from file proto/omgwords_service/omgwords.proto (package omgwords_service, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AnnotatedGameEvent, BroadcastGamePrivacy, BroadcastGamesResponse, CGPResponse, CreateBroadcastGameRequest, CreateBroadcastGameResponse, DeleteBroadcastGameRequest, DeleteBroadcastGameResponse, GameEventResponse, GetCGPRequest, GetGameDocumentRequest, GetGamesForEditorRequest, GetMyUnfinishedGamesRequest, GetRecentAnnotatedGamesRequest, ImportGCGRequest, ImportGCGResponse, PatchDocumentRequest, ReplaceDocumentRequest, SetRacksEvent } from "./omgwords_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { GameDocument } from "../ipc/omgwords_pb.js";

/**
 * GameEventService will handle our game event API. We can connect bots to
 * this API, or use it for sandbox mode, or for live annotations, etc.
 *
 * @generated from service omgwords_service.GameEventService
 */
export const GameEventService = {
  typeName: "omgwords_service.GameEventService",
  methods: {
    /**
     * CreateBroadcastGame will create a game for Woogles broadcast
     *
     * @generated from rpc omgwords_service.GameEventService.CreateBroadcastGame
     */
    createBroadcastGame: {
      name: "CreateBroadcastGame",
      I: CreateBroadcastGameRequest,
      O: CreateBroadcastGameResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteBroadcastGame deletes a Woogles annotated game.
     *
     * @generated from rpc omgwords_service.GameEventService.DeleteBroadcastGame
     */
    deleteBroadcastGame: {
      name: "DeleteBroadcastGame",
      I: DeleteBroadcastGameRequest,
      O: DeleteBroadcastGameResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SendGameEvent is how one sends game events to the Woogles API.
     *
     * @generated from rpc omgwords_service.GameEventService.SendGameEvent
     */
    sendGameEvent: {
      name: "SendGameEvent",
      I: AnnotatedGameEvent,
      O: GameEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SetRacks sets the rack for the players of the game.
     *
     * @generated from rpc omgwords_service.GameEventService.SetRacks
     */
    setRacks: {
      name: "SetRacks",
      I: SetRacksEvent,
      O: GameEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc omgwords_service.GameEventService.ReplaceGameDocument
     */
    replaceGameDocument: {
      name: "ReplaceGameDocument",
      I: ReplaceDocumentRequest,
      O: GameEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * PatchGameDocument merges in the passed-in GameDocument with what's on the
     * server. The passed-in GameDocument should be a partial document
     *
     * @generated from rpc omgwords_service.GameEventService.PatchGameDocument
     */
    patchGameDocument: {
      name: "PatchGameDocument",
      I: PatchDocumentRequest,
      O: GameEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc omgwords_service.GameEventService.SetBroadcastGamePrivacy
     */
    setBroadcastGamePrivacy: {
      name: "SetBroadcastGamePrivacy",
      I: BroadcastGamePrivacy,
      O: GameEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc omgwords_service.GameEventService.GetGamesForEditor
     */
    getGamesForEditor: {
      name: "GetGamesForEditor",
      I: GetGamesForEditorRequest,
      O: BroadcastGamesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc omgwords_service.GameEventService.GetMyUnfinishedGames
     */
    getMyUnfinishedGames: {
      name: "GetMyUnfinishedGames",
      I: GetMyUnfinishedGamesRequest,
      O: BroadcastGamesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetGameDocument fetches the latest GameDocument for the passed-in ID.
     *
     * @generated from rpc omgwords_service.GameEventService.GetGameDocument
     */
    getGameDocument: {
      name: "GetGameDocument",
      I: GetGameDocumentRequest,
      O: GameDocument,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc omgwords_service.GameEventService.GetRecentAnnotatedGames
     */
    getRecentAnnotatedGames: {
      name: "GetRecentAnnotatedGames",
      I: GetRecentAnnotatedGamesRequest,
      O: BroadcastGamesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc omgwords_service.GameEventService.GetCGP
     */
    getCGP: {
      name: "GetCGP",
      I: GetCGPRequest,
      O: CGPResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc omgwords_service.GameEventService.ImportGCG
     */
    importGCG: {
      name: "ImportGCG",
      I: ImportGCGRequest,
      O: ImportGCGResponse,
      kind: MethodKind.Unary,
    },
  }
};

