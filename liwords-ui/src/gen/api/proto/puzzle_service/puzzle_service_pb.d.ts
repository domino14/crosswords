// @generated by protoc-gen-es v0.2.1
// @generated from file api/proto/puzzle_service/puzzle_service.proto (package puzzle_service, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import type {GameEvent, GameHistory, PuzzleGenerationRequest} from "../../../macondo/api/proto/macondo/macondo_pb.js";
import type {ClientGameplayEvent} from "../ipc/omgwords_pb.js";

/**
 * @generated from enum puzzle_service.PuzzleQueryResult
 */
export declare enum PuzzleQueryResult {
  /**
   * @generated from enum value: UNSEEN = 0;
   */
  UNSEEN = 0,

  /**
   * @generated from enum value: UNRATED = 1;
   */
  UNRATED = 1,

  /**
   * @generated from enum value: UNFINISHED = 2;
   */
  UNFINISHED = 2,

  /**
   * @generated from enum value: EXHAUSTED = 3;
   */
  EXHAUSTED = 3,

  /**
   * @generated from enum value: RANDOM = 4;
   */
  RANDOM = 4,

  /**
   * @generated from enum value: START = 5;
   */
  START = 5,
}

/**
 * @generated from enum puzzle_service.PuzzleStatus
 */
export declare enum PuzzleStatus {
  /**
   * @generated from enum value: UNANSWERED = 0;
   */
  UNANSWERED = 0,

  /**
   * @generated from enum value: CORRECT = 1;
   */
  CORRECT = 1,

  /**
   * @generated from enum value: INCORRECT = 2;
   */
  INCORRECT = 2,
}

/**
 * @generated from message puzzle_service.StartPuzzleIdRequest
 */
export declare class StartPuzzleIdRequest extends Message<StartPuzzleIdRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  constructor(data?: PartialMessage<StartPuzzleIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.StartPuzzleIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartPuzzleIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartPuzzleIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartPuzzleIdRequest;

  static equals(a: StartPuzzleIdRequest | PlainMessage<StartPuzzleIdRequest> | undefined, b: StartPuzzleIdRequest | PlainMessage<StartPuzzleIdRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.StartPuzzleIdResponse
 */
export declare class StartPuzzleIdResponse extends Message<StartPuzzleIdResponse> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  /**
   * @generated from field: puzzle_service.PuzzleQueryResult query_result = 2;
   */
  queryResult: PuzzleQueryResult;

  constructor(data?: PartialMessage<StartPuzzleIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.StartPuzzleIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartPuzzleIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartPuzzleIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartPuzzleIdResponse;

  static equals(a: StartPuzzleIdResponse | PlainMessage<StartPuzzleIdResponse> | undefined, b: StartPuzzleIdResponse | PlainMessage<StartPuzzleIdResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.NextPuzzleIdRequest
 */
export declare class NextPuzzleIdRequest extends Message<NextPuzzleIdRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  constructor(data?: PartialMessage<NextPuzzleIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.NextPuzzleIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextPuzzleIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextPuzzleIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextPuzzleIdRequest;

  static equals(a: NextPuzzleIdRequest | PlainMessage<NextPuzzleIdRequest> | undefined, b: NextPuzzleIdRequest | PlainMessage<NextPuzzleIdRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.NextPuzzleIdResponse
 */
export declare class NextPuzzleIdResponse extends Message<NextPuzzleIdResponse> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  /**
   * @generated from field: puzzle_service.PuzzleQueryResult query_result = 2;
   */
  queryResult: PuzzleQueryResult;

  constructor(data?: PartialMessage<NextPuzzleIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.NextPuzzleIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextPuzzleIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextPuzzleIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextPuzzleIdResponse;

  static equals(a: NextPuzzleIdResponse | PlainMessage<NextPuzzleIdResponse> | undefined, b: NextPuzzleIdResponse | PlainMessage<NextPuzzleIdResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.NextClosestRatingPuzzleIdRequest
 */
export declare class NextClosestRatingPuzzleIdRequest extends Message<NextClosestRatingPuzzleIdRequest> {
  /**
   * @generated from field: string lexicon = 1;
   */
  lexicon: string;

  constructor(data?: PartialMessage<NextClosestRatingPuzzleIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.NextClosestRatingPuzzleIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextClosestRatingPuzzleIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextClosestRatingPuzzleIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextClosestRatingPuzzleIdRequest;

  static equals(a: NextClosestRatingPuzzleIdRequest | PlainMessage<NextClosestRatingPuzzleIdRequest> | undefined, b: NextClosestRatingPuzzleIdRequest | PlainMessage<NextClosestRatingPuzzleIdRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.NextClosestRatingPuzzleIdResponse
 */
export declare class NextClosestRatingPuzzleIdResponse extends Message<NextClosestRatingPuzzleIdResponse> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  /**
   * @generated from field: puzzle_service.PuzzleQueryResult query_result = 2;
   */
  queryResult: PuzzleQueryResult;

  constructor(data?: PartialMessage<NextClosestRatingPuzzleIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.NextClosestRatingPuzzleIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NextClosestRatingPuzzleIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NextClosestRatingPuzzleIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NextClosestRatingPuzzleIdResponse;

  static equals(a: NextClosestRatingPuzzleIdResponse | PlainMessage<NextClosestRatingPuzzleIdResponse> | undefined, b: NextClosestRatingPuzzleIdResponse | PlainMessage<NextClosestRatingPuzzleIdResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleRequest
 */
export declare class PuzzleRequest extends Message<PuzzleRequest> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  constructor(data?: PartialMessage<PuzzleRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleRequest;

  static equals(a: PuzzleRequest | PlainMessage<PuzzleRequest> | undefined, b: PuzzleRequest | PlainMessage<PuzzleRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.AnswerResponse
 */
export declare class AnswerResponse extends Message<AnswerResponse> {
  /**
   * @generated from field: macondo.GameEvent correct_answer = 1;
   */
  correctAnswer?: GameEvent;

  /**
   * @generated from field: puzzle_service.PuzzleStatus status = 2;
   */
  status: PuzzleStatus;

  /**
   * @generated from field: int32 attempts = 3;
   */
  attempts: number;

  /**
   * @generated from field: string game_id = 4;
   */
  gameId: string;

  /**
   * @generated from field: int32 turn_number = 5;
   */
  turnNumber: number;

  /**
   * @generated from field: string after_text = 6;
   */
  afterText: string;

  /**
   * @generated from field: int32 new_user_rating = 7;
   */
  newUserRating: number;

  /**
   * @generated from field: int32 new_puzzle_rating = 8;
   */
  newPuzzleRating: number;

  /**
   * @generated from field: google.protobuf.Timestamp first_attempt_time = 9;
   */
  firstAttemptTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_attempt_time = 10;
   */
  lastAttemptTime?: Timestamp;

  constructor(data?: PartialMessage<AnswerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.AnswerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerResponse;

  static equals(a: AnswerResponse | PlainMessage<AnswerResponse> | undefined, b: AnswerResponse | PlainMessage<AnswerResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleResponse
 */
export declare class PuzzleResponse extends Message<PuzzleResponse> {
  /**
   * @generated from field: macondo.GameHistory history = 1;
   */
  history?: GameHistory;

  /**
   * @generated from field: string before_text = 2;
   */
  beforeText: string;

  /**
   * @generated from field: puzzle_service.AnswerResponse answer = 3;
   */
  answer?: AnswerResponse;

  constructor(data?: PartialMessage<PuzzleResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleResponse;

  static equals(a: PuzzleResponse | PlainMessage<PuzzleResponse> | undefined, b: PuzzleResponse | PlainMessage<PuzzleResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.SubmissionRequest
 */
export declare class SubmissionRequest extends Message<SubmissionRequest> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  /**
   * @generated from field: ipc.ClientGameplayEvent answer = 2;
   */
  answer?: ClientGameplayEvent;

  /**
   * @generated from field: bool show_solution = 3;
   */
  showSolution: boolean;

  constructor(data?: PartialMessage<SubmissionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.SubmissionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubmissionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubmissionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubmissionRequest;

  static equals(a: SubmissionRequest | PlainMessage<SubmissionRequest> | undefined, b: SubmissionRequest | PlainMessage<SubmissionRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.SubmissionResponse
 */
export declare class SubmissionResponse extends Message<SubmissionResponse> {
  /**
   * @generated from field: bool user_is_correct = 1;
   */
  userIsCorrect: boolean;

  /**
   * @generated from field: puzzle_service.AnswerResponse answer = 2;
   */
  answer?: AnswerResponse;

  constructor(data?: PartialMessage<SubmissionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.SubmissionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubmissionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubmissionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubmissionResponse;

  static equals(a: SubmissionResponse | PlainMessage<SubmissionResponse> | undefined, b: SubmissionResponse | PlainMessage<SubmissionResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PreviousPuzzleRequest
 */
export declare class PreviousPuzzleRequest extends Message<PreviousPuzzleRequest> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  constructor(data?: PartialMessage<PreviousPuzzleRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PreviousPuzzleRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreviousPuzzleRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreviousPuzzleRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreviousPuzzleRequest;

  static equals(a: PreviousPuzzleRequest | PlainMessage<PreviousPuzzleRequest> | undefined, b: PreviousPuzzleRequest | PlainMessage<PreviousPuzzleRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PreviousPuzzleResponse
 */
export declare class PreviousPuzzleResponse extends Message<PreviousPuzzleResponse> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  constructor(data?: PartialMessage<PreviousPuzzleResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PreviousPuzzleResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreviousPuzzleResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreviousPuzzleResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreviousPuzzleResponse;

  static equals(a: PreviousPuzzleResponse | PlainMessage<PreviousPuzzleResponse> | undefined, b: PreviousPuzzleResponse | PlainMessage<PreviousPuzzleResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleVoteRequest
 */
export declare class PuzzleVoteRequest extends Message<PuzzleVoteRequest> {
  /**
   * @generated from field: string puzzle_id = 1;
   */
  puzzleId: string;

  /**
   * @generated from field: int32 vote = 2;
   */
  vote: number;

  constructor(data?: PartialMessage<PuzzleVoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleVoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleVoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleVoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleVoteRequest;

  static equals(a: PuzzleVoteRequest | PlainMessage<PuzzleVoteRequest> | undefined, b: PuzzleVoteRequest | PlainMessage<PuzzleVoteRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleVoteResponse
 */
export declare class PuzzleVoteResponse extends Message<PuzzleVoteResponse> {
  constructor(data?: PartialMessage<PuzzleVoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleVoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleVoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleVoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleVoteResponse;

  static equals(a: PuzzleVoteResponse | PlainMessage<PuzzleVoteResponse> | undefined, b: PuzzleVoteResponse | PlainMessage<PuzzleVoteResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleGenerationJobRequest
 */
export declare class PuzzleGenerationJobRequest extends Message<PuzzleGenerationJobRequest> {
  /**
   * @generated from field: bool bot_vs_bot = 1;
   */
  botVsBot: boolean;

  /**
   * @generated from field: string lexicon = 2;
   */
  lexicon: string;

  /**
   * @generated from field: string letter_distribution = 3;
   */
  letterDistribution: string;

  /**
   * @generated from field: int32 sql_offset = 4;
   */
  sqlOffset: number;

  /**
   * @generated from field: int32 game_consideration_limit = 5;
   */
  gameConsiderationLimit: number;

  /**
   * @generated from field: int32 game_creation_limit = 6;
   */
  gameCreationLimit: number;

  /**
   * @generated from field: macondo.PuzzleGenerationRequest request = 7;
   */
  request?: PuzzleGenerationRequest;

  constructor(data?: PartialMessage<PuzzleGenerationJobRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleGenerationJobRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleGenerationJobRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleGenerationJobRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleGenerationJobRequest;

  static equals(a: PuzzleGenerationJobRequest | PlainMessage<PuzzleGenerationJobRequest> | undefined, b: PuzzleGenerationJobRequest | PlainMessage<PuzzleGenerationJobRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.APIPuzzleGenerationJobResponse
 */
export declare class APIPuzzleGenerationJobResponse extends Message<APIPuzzleGenerationJobResponse> {
  /**
   * @generated from field: bool started = 1;
   */
  started: boolean;

  constructor(data?: PartialMessage<APIPuzzleGenerationJobResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.APIPuzzleGenerationJobResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): APIPuzzleGenerationJobResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): APIPuzzleGenerationJobResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): APIPuzzleGenerationJobResponse;

  static equals(a: APIPuzzleGenerationJobResponse | PlainMessage<APIPuzzleGenerationJobResponse> | undefined, b: APIPuzzleGenerationJobResponse | PlainMessage<APIPuzzleGenerationJobResponse> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.APIPuzzleGenerationJobRequest
 */
export declare class APIPuzzleGenerationJobRequest extends Message<APIPuzzleGenerationJobRequest> {
  /**
   * @generated from field: puzzle_service.PuzzleGenerationJobRequest request = 1;
   */
  request?: PuzzleGenerationJobRequest;

  /**
   * @generated from field: string secret_key = 2;
   */
  secretKey: string;

  constructor(data?: PartialMessage<APIPuzzleGenerationJobRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.APIPuzzleGenerationJobRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): APIPuzzleGenerationJobRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): APIPuzzleGenerationJobRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): APIPuzzleGenerationJobRequest;

  static equals(a: APIPuzzleGenerationJobRequest | PlainMessage<APIPuzzleGenerationJobRequest> | undefined, b: APIPuzzleGenerationJobRequest | PlainMessage<APIPuzzleGenerationJobRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleJobLogsRequest
 */
export declare class PuzzleJobLogsRequest extends Message<PuzzleJobLogsRequest> {
  /**
   * @generated from field: int32 offset = 1;
   */
  offset: number;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;

  constructor(data?: PartialMessage<PuzzleJobLogsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleJobLogsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleJobLogsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleJobLogsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleJobLogsRequest;

  static equals(a: PuzzleJobLogsRequest | PlainMessage<PuzzleJobLogsRequest> | undefined, b: PuzzleJobLogsRequest | PlainMessage<PuzzleJobLogsRequest> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleJobLog
 */
export declare class PuzzleJobLog extends Message<PuzzleJobLog> {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: puzzle_service.PuzzleGenerationJobRequest request = 2;
   */
  request?: PuzzleGenerationJobRequest;

  /**
   * @generated from field: bool fulfilled = 3;
   */
  fulfilled: boolean;

  /**
   * @generated from field: string error_status = 4;
   */
  errorStatus: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp completed_at = 6;
   */
  completedAt?: Timestamp;

  constructor(data?: PartialMessage<PuzzleJobLog>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleJobLog";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleJobLog;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleJobLog;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleJobLog;

  static equals(a: PuzzleJobLog | PlainMessage<PuzzleJobLog> | undefined, b: PuzzleJobLog | PlainMessage<PuzzleJobLog> | undefined): boolean;
}

/**
 * @generated from message puzzle_service.PuzzleJobLogsResponse
 */
export declare class PuzzleJobLogsResponse extends Message<PuzzleJobLogsResponse> {
  /**
   * @generated from field: repeated puzzle_service.PuzzleJobLog logs = 1;
   */
  logs: PuzzleJobLog[];

  constructor(data?: PartialMessage<PuzzleJobLogsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "puzzle_service.PuzzleJobLogsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PuzzleJobLogsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PuzzleJobLogsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PuzzleJobLogsResponse;

  static equals(a: PuzzleJobLogsResponse | PlainMessage<PuzzleJobLogsResponse> | undefined, b: PuzzleJobLogsResponse | PlainMessage<PuzzleJobLogsResponse> | undefined): boolean;
}

