// @generated by protoc-gen-es v0.2.1
// @generated from file api/proto/user_service/user_service.proto (package user_service, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * UserLoginRequest is used for logging in.
 *
 * @generated from message user_service.UserLoginRequest
 */
export declare class UserLoginRequest extends Message<UserLoginRequest> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  constructor(data?: PartialMessage<UserLoginRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UserLoginRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserLoginRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserLoginRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserLoginRequest;

  static equals(a: UserLoginRequest | PlainMessage<UserLoginRequest> | undefined, b: UserLoginRequest | PlainMessage<UserLoginRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.ChangePasswordRequest
 */
export declare class ChangePasswordRequest extends Message<ChangePasswordRequest> {
  /**
   * @generated from field: string old_password = 1;
   */
  oldPassword: string;

  /**
   * @generated from field: string new_password = 2;
   */
  newPassword: string;

  constructor(data?: PartialMessage<ChangePasswordRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ChangePasswordRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChangePasswordRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChangePasswordRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChangePasswordRequest;

  static equals(a: ChangePasswordRequest | PlainMessage<ChangePasswordRequest> | undefined, b: ChangePasswordRequest | PlainMessage<ChangePasswordRequest> | undefined): boolean;
}

/**
 * The server should also set the session ID in the header.
 *
 * @generated from message user_service.LoginResponse
 */
export declare class LoginResponse extends Message<LoginResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * I'm not sure if it's safe to do this (return session_id in the request
   * body). We will keep it blank but it might be useful for other interfaces,
   * such as a CLI-driven one, or a phone app, e.g, so keep this here for now.
   *
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  constructor(data?: PartialMessage<LoginResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.LoginResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginResponse;

  static equals(a: LoginResponse | PlainMessage<LoginResponse> | undefined, b: LoginResponse | PlainMessage<LoginResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.ChangePasswordResponse
 */
export declare class ChangePasswordResponse extends Message<ChangePasswordResponse> {
  constructor(data?: PartialMessage<ChangePasswordResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ChangePasswordResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChangePasswordResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChangePasswordResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChangePasswordResponse;

  static equals(a: ChangePasswordResponse | PlainMessage<ChangePasswordResponse> | undefined, b: ChangePasswordResponse | PlainMessage<ChangePasswordResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.ResetPasswordRequestStep1
 */
export declare class ResetPasswordRequestStep1 extends Message<ResetPasswordRequestStep1> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  constructor(data?: PartialMessage<ResetPasswordRequestStep1>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ResetPasswordRequestStep1";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPasswordRequestStep1;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPasswordRequestStep1;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPasswordRequestStep1;

  static equals(a: ResetPasswordRequestStep1 | PlainMessage<ResetPasswordRequestStep1> | undefined, b: ResetPasswordRequestStep1 | PlainMessage<ResetPasswordRequestStep1> | undefined): boolean;
}

/**
 * @generated from message user_service.ResetPasswordRequestStep2
 */
export declare class ResetPasswordRequestStep2 extends Message<ResetPasswordRequestStep2> {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * @generated from field: string reset_code = 2;
   */
  resetCode: string;

  constructor(data?: PartialMessage<ResetPasswordRequestStep2>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ResetPasswordRequestStep2";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPasswordRequestStep2;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPasswordRequestStep2;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPasswordRequestStep2;

  static equals(a: ResetPasswordRequestStep2 | PlainMessage<ResetPasswordRequestStep2> | undefined, b: ResetPasswordRequestStep2 | PlainMessage<ResetPasswordRequestStep2> | undefined): boolean;
}

/**
 * @generated from message user_service.ResetPasswordResponse
 */
export declare class ResetPasswordResponse extends Message<ResetPasswordResponse> {
  constructor(data?: PartialMessage<ResetPasswordResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ResetPasswordResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetPasswordResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetPasswordResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetPasswordResponse;

  static equals(a: ResetPasswordResponse | PlainMessage<ResetPasswordResponse> | undefined, b: ResetPasswordResponse | PlainMessage<ResetPasswordResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.CountryFlag
 */
export declare class CountryFlag extends Message<CountryFlag> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<CountryFlag>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.CountryFlag";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountryFlag;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountryFlag;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountryFlag;

  static equals(a: CountryFlag | PlainMessage<CountryFlag> | undefined, b: CountryFlag | PlainMessage<CountryFlag> | undefined): boolean;
}

/**
 * @generated from message user_service.KickstarterBadge
 */
export declare class KickstarterBadge extends Message<KickstarterBadge> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  constructor(data?: PartialMessage<KickstarterBadge>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.KickstarterBadge";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KickstarterBadge;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KickstarterBadge;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KickstarterBadge;

  static equals(a: KickstarterBadge | PlainMessage<KickstarterBadge> | undefined, b: KickstarterBadge | PlainMessage<KickstarterBadge> | undefined): boolean;
}

/**
 * Information require to display a user in a game.
 *
 * @generated from message user_service.UserGameInfo
 */
export declare class UserGameInfo extends Message<UserGameInfo> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string avatar_url = 2;
   */
  avatarUrl: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: string full_name = 4;
   */
  fullName: string;

  /**
   * CountryFlag appears to be obsolete; we fetch these using BriefProfiles
   *
   * @generated from field: user_service.CountryFlag flag = 5 [deprecated = true];
   * @deprecated
   */
  flag?: CountryFlag;

  /**
   * @generated from field: repeated user_service.KickstarterBadge kickstarter_badges = 6;
   */
  kickstarterBadges: KickstarterBadge[];

  constructor(data?: PartialMessage<UserGameInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UserGameInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserGameInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserGameInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserGameInfo;

  static equals(a: UserGameInfo | PlainMessage<UserGameInfo> | undefined, b: UserGameInfo | PlainMessage<UserGameInfo> | undefined): boolean;
}

/**
 * SocketTokenRequest requests a token in order to authenticate with the
 * socket server
 *
 * @generated from message user_service.SocketTokenRequest
 */
export declare class SocketTokenRequest extends Message<SocketTokenRequest> {
  constructor(data?: PartialMessage<SocketTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.SocketTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SocketTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SocketTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SocketTokenRequest;

  static equals(a: SocketTokenRequest | PlainMessage<SocketTokenRequest> | undefined, b: SocketTokenRequest | PlainMessage<SocketTokenRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.SocketTokenResponse
 */
export declare class SocketTokenResponse extends Message<SocketTokenResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: string cid = 2;
   */
  cid: string;

  /**
   * @generated from field: string front_end_version = 3;
   */
  frontEndVersion: string;

  constructor(data?: PartialMessage<SocketTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.SocketTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SocketTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SocketTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SocketTokenResponse;

  static equals(a: SocketTokenResponse | PlainMessage<SocketTokenResponse> | undefined, b: SocketTokenResponse | PlainMessage<SocketTokenResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.UserLogoutRequest
 */
export declare class UserLogoutRequest extends Message<UserLogoutRequest> {
  constructor(data?: PartialMessage<UserLogoutRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UserLogoutRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserLogoutRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserLogoutRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserLogoutRequest;

  static equals(a: UserLogoutRequest | PlainMessage<UserLogoutRequest> | undefined, b: UserLogoutRequest | PlainMessage<UserLogoutRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.LogoutResponse
 */
export declare class LogoutResponse extends Message<LogoutResponse> {
  constructor(data?: PartialMessage<LogoutResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.LogoutResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LogoutResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LogoutResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LogoutResponse;

  static equals(a: LogoutResponse | PlainMessage<LogoutResponse> | undefined, b: LogoutResponse | PlainMessage<LogoutResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.NotifyAccountClosureRequest
 */
export declare class NotifyAccountClosureRequest extends Message<NotifyAccountClosureRequest> {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  constructor(data?: PartialMessage<NotifyAccountClosureRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.NotifyAccountClosureRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotifyAccountClosureRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotifyAccountClosureRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotifyAccountClosureRequest;

  static equals(a: NotifyAccountClosureRequest | PlainMessage<NotifyAccountClosureRequest> | undefined, b: NotifyAccountClosureRequest | PlainMessage<NotifyAccountClosureRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.NotifyAccountClosureResponse
 */
export declare class NotifyAccountClosureResponse extends Message<NotifyAccountClosureResponse> {
  constructor(data?: PartialMessage<NotifyAccountClosureResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.NotifyAccountClosureResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotifyAccountClosureResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotifyAccountClosureResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotifyAccountClosureResponse;

  static equals(a: NotifyAccountClosureResponse | PlainMessage<NotifyAccountClosureResponse> | undefined, b: NotifyAccountClosureResponse | PlainMessage<NotifyAccountClosureResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.GetSignedCookieRequest
 */
export declare class GetSignedCookieRequest extends Message<GetSignedCookieRequest> {
  constructor(data?: PartialMessage<GetSignedCookieRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetSignedCookieRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSignedCookieRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSignedCookieRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSignedCookieRequest;

  static equals(a: GetSignedCookieRequest | PlainMessage<GetSignedCookieRequest> | undefined, b: GetSignedCookieRequest | PlainMessage<GetSignedCookieRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.SignedCookieResponse
 */
export declare class SignedCookieResponse extends Message<SignedCookieResponse> {
  /**
   * @generated from field: string jwt = 1;
   */
  jwt: string;

  constructor(data?: PartialMessage<SignedCookieResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.SignedCookieResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedCookieResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedCookieResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedCookieResponse;

  static equals(a: SignedCookieResponse | PlainMessage<SignedCookieResponse> | undefined, b: SignedCookieResponse | PlainMessage<SignedCookieResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.InstallSignedCookieResponse
 */
export declare class InstallSignedCookieResponse extends Message<InstallSignedCookieResponse> {
  constructor(data?: PartialMessage<InstallSignedCookieResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.InstallSignedCookieResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstallSignedCookieResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstallSignedCookieResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstallSignedCookieResponse;

  static equals(a: InstallSignedCookieResponse | PlainMessage<InstallSignedCookieResponse> | undefined, b: InstallSignedCookieResponse | PlainMessage<InstallSignedCookieResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.UserRegistrationRequest
 */
export declare class UserRegistrationRequest extends Message<UserRegistrationRequest> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: string registration_code = 4;
   */
  registrationCode: string;

  /**
   * @generated from field: string birth_date = 5;
   */
  birthDate: string;

  /**
   * @generated from field: string first_name = 6;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 7;
   */
  lastName: string;

  /**
   * @generated from field: string country_code = 8;
   */
  countryCode: string;

  constructor(data?: PartialMessage<UserRegistrationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UserRegistrationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserRegistrationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserRegistrationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserRegistrationRequest;

  static equals(a: UserRegistrationRequest | PlainMessage<UserRegistrationRequest> | undefined, b: UserRegistrationRequest | PlainMessage<UserRegistrationRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.RegistrationResponse
 */
export declare class RegistrationResponse extends Message<RegistrationResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<RegistrationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.RegistrationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegistrationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegistrationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegistrationResponse;

  static equals(a: RegistrationResponse | PlainMessage<RegistrationResponse> | undefined, b: RegistrationResponse | PlainMessage<RegistrationResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.RatingsRequest
 */
export declare class RatingsRequest extends Message<RatingsRequest> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  constructor(data?: PartialMessage<RatingsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.RatingsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatingsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatingsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatingsRequest;

  static equals(a: RatingsRequest | PlainMessage<RatingsRequest> | undefined, b: RatingsRequest | PlainMessage<RatingsRequest> | undefined): boolean;
}

/**
 * We just send the raw JSON from the db here for ease. Let the front-end
 * figure out how to display it.
 *
 * @generated from message user_service.RatingsResponse
 */
export declare class RatingsResponse extends Message<RatingsResponse> {
  /**
   * @generated from field: string json = 1;
   */
  json: string;

  constructor(data?: PartialMessage<RatingsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.RatingsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatingsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatingsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatingsResponse;

  static equals(a: RatingsResponse | PlainMessage<RatingsResponse> | undefined, b: RatingsResponse | PlainMessage<RatingsResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.StatsRequest
 */
export declare class StatsRequest extends Message<StatsRequest> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  constructor(data?: PartialMessage<StatsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.StatsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatsRequest;

  static equals(a: StatsRequest | PlainMessage<StatsRequest> | undefined, b: StatsRequest | PlainMessage<StatsRequest> | undefined): boolean;
}

/**
 * See ratings JSON note above.
 *
 * @generated from message user_service.StatsResponse
 */
export declare class StatsResponse extends Message<StatsResponse> {
  /**
   * @generated from field: string json = 1;
   */
  json: string;

  constructor(data?: PartialMessage<StatsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.StatsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatsResponse;

  static equals(a: StatsResponse | PlainMessage<StatsResponse> | undefined, b: StatsResponse | PlainMessage<StatsResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.ProfileRequest
 */
export declare class ProfileRequest extends Message<ProfileRequest> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  constructor(data?: PartialMessage<ProfileRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ProfileRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileRequest;

  static equals(a: ProfileRequest | PlainMessage<ProfileRequest> | undefined, b: ProfileRequest | PlainMessage<ProfileRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.ProfileResponse
 */
export declare class ProfileResponse extends Message<ProfileResponse> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: string country_code = 3;
   */
  countryCode: string;

  /**
   * @generated from field: string title = 4;
   */
  title: string;

  /**
   * @generated from field: string about = 5;
   */
  about: string;

  /**
   * @generated from field: string ratings_json = 6;
   */
  ratingsJson: string;

  /**
   * @generated from field: string stats_json = 7;
   */
  statsJson: string;

  /**
   * @generated from field: string user_id = 8;
   */
  userId: string;

  /**
   * @generated from field: string avatar_url = 9;
   */
  avatarUrl: string;

  /**
   * @generated from field: string full_name = 10;
   */
  fullName: string;

  /**
   * @generated from field: bool avatars_editable = 11;
   */
  avatarsEditable: boolean;

  /**
   * @generated from field: string birth_date = 12;
   */
  birthDate: string;

  constructor(data?: PartialMessage<ProfileResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ProfileResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileResponse;

  static equals(a: ProfileResponse | PlainMessage<ProfileResponse> | undefined, b: ProfileResponse | PlainMessage<ProfileResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.PersonalInfoRequest
 */
export declare class PersonalInfoRequest extends Message<PersonalInfoRequest> {
  constructor(data?: PartialMessage<PersonalInfoRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.PersonalInfoRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PersonalInfoRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PersonalInfoRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PersonalInfoRequest;

  static equals(a: PersonalInfoRequest | PlainMessage<PersonalInfoRequest> | undefined, b: PersonalInfoRequest | PlainMessage<PersonalInfoRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.PersonalInfoResponse
 */
export declare class PersonalInfoResponse extends Message<PersonalInfoResponse> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: string country_code = 4;
   */
  countryCode: string;

  /**
   * @generated from field: string avatar_url = 5;
   */
  avatarUrl: string;

  /**
   * @generated from field: string full_name = 6;
   */
  fullName: string;

  /**
   * @generated from field: string about = 7;
   */
  about: string;

  /**
   * @generated from field: string birth_date = 8;
   */
  birthDate: string;

  constructor(data?: PartialMessage<PersonalInfoResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.PersonalInfoResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PersonalInfoResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PersonalInfoResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PersonalInfoResponse;

  static equals(a: PersonalInfoResponse | PlainMessage<PersonalInfoResponse> | undefined, b: PersonalInfoResponse | PlainMessage<PersonalInfoResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.UpdatePersonalInfoRequest
 */
export declare class UpdatePersonalInfoRequest extends Message<UpdatePersonalInfoRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: string country_code = 4;
   */
  countryCode: string;

  /**
   * @generated from field: string avatar_url = 5;
   */
  avatarUrl: string;

  /**
   * @generated from field: string full_name = 6;
   */
  fullName: string;

  /**
   * @generated from field: string about = 7;
   */
  about: string;

  /**
   * @generated from field: string birth_date = 8;
   */
  birthDate: string;

  constructor(data?: PartialMessage<UpdatePersonalInfoRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UpdatePersonalInfoRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePersonalInfoRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePersonalInfoRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePersonalInfoRequest;

  static equals(a: UpdatePersonalInfoRequest | PlainMessage<UpdatePersonalInfoRequest> | undefined, b: UpdatePersonalInfoRequest | PlainMessage<UpdatePersonalInfoRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.UpdatePersonalInfoResponse
 */
export declare class UpdatePersonalInfoResponse extends Message<UpdatePersonalInfoResponse> {
  constructor(data?: PartialMessage<UpdatePersonalInfoResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UpdatePersonalInfoResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePersonalInfoResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePersonalInfoResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePersonalInfoResponse;

  static equals(a: UpdatePersonalInfoResponse | PlainMessage<UpdatePersonalInfoResponse> | undefined, b: UpdatePersonalInfoResponse | PlainMessage<UpdatePersonalInfoResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.UpdateAvatarRequest
 */
export declare class UpdateAvatarRequest extends Message<UpdateAvatarRequest> {
  /**
   * @generated from field: bytes jpg_data = 1;
   */
  jpgData: Uint8Array;

  constructor(data?: PartialMessage<UpdateAvatarRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UpdateAvatarRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAvatarRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAvatarRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAvatarRequest;

  static equals(a: UpdateAvatarRequest | PlainMessage<UpdateAvatarRequest> | undefined, b: UpdateAvatarRequest | PlainMessage<UpdateAvatarRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.UpdateAvatarResponse
 */
export declare class UpdateAvatarResponse extends Message<UpdateAvatarResponse> {
  /**
   * @generated from field: string avatar_url = 1;
   */
  avatarUrl: string;

  constructor(data?: PartialMessage<UpdateAvatarResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UpdateAvatarResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAvatarResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAvatarResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAvatarResponse;

  static equals(a: UpdateAvatarResponse | PlainMessage<UpdateAvatarResponse> | undefined, b: UpdateAvatarResponse | PlainMessage<UpdateAvatarResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.RemoveAvatarRequest
 */
export declare class RemoveAvatarRequest extends Message<RemoveAvatarRequest> {
  constructor(data?: PartialMessage<RemoveAvatarRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.RemoveAvatarRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveAvatarRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveAvatarRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveAvatarRequest;

  static equals(a: RemoveAvatarRequest | PlainMessage<RemoveAvatarRequest> | undefined, b: RemoveAvatarRequest | PlainMessage<RemoveAvatarRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.RemoveAvatarResponse
 */
export declare class RemoveAvatarResponse extends Message<RemoveAvatarResponse> {
  constructor(data?: PartialMessage<RemoveAvatarResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.RemoveAvatarResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveAvatarResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveAvatarResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveAvatarResponse;

  static equals(a: RemoveAvatarResponse | PlainMessage<RemoveAvatarResponse> | undefined, b: RemoveAvatarResponse | PlainMessage<RemoveAvatarResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.BriefProfilesRequest
 */
export declare class BriefProfilesRequest extends Message<BriefProfilesRequest> {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];

  constructor(data?: PartialMessage<BriefProfilesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.BriefProfilesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BriefProfilesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BriefProfilesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BriefProfilesRequest;

  static equals(a: BriefProfilesRequest | PlainMessage<BriefProfilesRequest> | undefined, b: BriefProfilesRequest | PlainMessage<BriefProfilesRequest> | undefined): boolean;
}

/**
 * this is a subset of ProfileResponse
 *
 * @generated from message user_service.BriefProfile
 */
export declare class BriefProfile extends Message<BriefProfile> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * omitted for non-adults
   *
   * @generated from field: string full_name = 2;
   */
  fullName: string;

  /**
   * @generated from field: string country_code = 3;
   */
  countryCode: string;

  /**
   * @generated from field: string avatar_url = 9;
   */
  avatarUrl: string;

  constructor(data?: PartialMessage<BriefProfile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.BriefProfile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BriefProfile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BriefProfile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BriefProfile;

  static equals(a: BriefProfile | PlainMessage<BriefProfile> | undefined, b: BriefProfile | PlainMessage<BriefProfile> | undefined): boolean;
}

/**
 * @generated from message user_service.BriefProfilesResponse
 */
export declare class BriefProfilesResponse extends Message<BriefProfilesResponse> {
  /**
   * @generated from field: map<string, user_service.BriefProfile> response = 1;
   */
  response: { [key: string]: BriefProfile };

  constructor(data?: PartialMessage<BriefProfilesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.BriefProfilesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BriefProfilesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BriefProfilesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BriefProfilesResponse;

  static equals(a: BriefProfilesResponse | PlainMessage<BriefProfilesResponse> | undefined, b: BriefProfilesResponse | PlainMessage<BriefProfilesResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.UsernameSearchRequest
 */
export declare class UsernameSearchRequest extends Message<UsernameSearchRequest> {
  /**
   * @generated from field: string prefix = 1;
   */
  prefix: string;

  constructor(data?: PartialMessage<UsernameSearchRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UsernameSearchRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsernameSearchRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsernameSearchRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsernameSearchRequest;

  static equals(a: UsernameSearchRequest | PlainMessage<UsernameSearchRequest> | undefined, b: UsernameSearchRequest | PlainMessage<UsernameSearchRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.UsernameSearchResponse
 */
export declare class UsernameSearchResponse extends Message<UsernameSearchResponse> {
  /**
   * @generated from field: repeated user_service.BasicUser users = 2;
   */
  users: BasicUser[];

  constructor(data?: PartialMessage<UsernameSearchResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.UsernameSearchResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsernameSearchResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsernameSearchResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsernameSearchResponse;

  static equals(a: UsernameSearchResponse | PlainMessage<UsernameSearchResponse> | undefined, b: UsernameSearchResponse | PlainMessage<UsernameSearchResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.AddFollowRequest
 */
export declare class AddFollowRequest extends Message<AddFollowRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<AddFollowRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.AddFollowRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddFollowRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddFollowRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddFollowRequest;

  static equals(a: AddFollowRequest | PlainMessage<AddFollowRequest> | undefined, b: AddFollowRequest | PlainMessage<AddFollowRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.RemoveFollowRequest
 */
export declare class RemoveFollowRequest extends Message<RemoveFollowRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<RemoveFollowRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.RemoveFollowRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveFollowRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveFollowRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveFollowRequest;

  static equals(a: RemoveFollowRequest | PlainMessage<RemoveFollowRequest> | undefined, b: RemoveFollowRequest | PlainMessage<RemoveFollowRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.GetFollowsRequest
 */
export declare class GetFollowsRequest extends Message<GetFollowsRequest> {
  constructor(data?: PartialMessage<GetFollowsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetFollowsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFollowsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFollowsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFollowsRequest;

  static equals(a: GetFollowsRequest | PlainMessage<GetFollowsRequest> | undefined, b: GetFollowsRequest | PlainMessage<GetFollowsRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.AddBlockRequest
 */
export declare class AddBlockRequest extends Message<AddBlockRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<AddBlockRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.AddBlockRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddBlockRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddBlockRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddBlockRequest;

  static equals(a: AddBlockRequest | PlainMessage<AddBlockRequest> | undefined, b: AddBlockRequest | PlainMessage<AddBlockRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.RemoveBlockRequest
 */
export declare class RemoveBlockRequest extends Message<RemoveBlockRequest> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  constructor(data?: PartialMessage<RemoveBlockRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.RemoveBlockRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveBlockRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveBlockRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveBlockRequest;

  static equals(a: RemoveBlockRequest | PlainMessage<RemoveBlockRequest> | undefined, b: RemoveBlockRequest | PlainMessage<RemoveBlockRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.GetBlocksRequest
 */
export declare class GetBlocksRequest extends Message<GetBlocksRequest> {
  constructor(data?: PartialMessage<GetBlocksRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetBlocksRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBlocksRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBlocksRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBlocksRequest;

  static equals(a: GetBlocksRequest | PlainMessage<GetBlocksRequest> | undefined, b: GetBlocksRequest | PlainMessage<GetBlocksRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.GetFullBlocksRequest
 */
export declare class GetFullBlocksRequest extends Message<GetFullBlocksRequest> {
  constructor(data?: PartialMessage<GetFullBlocksRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetFullBlocksRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFullBlocksRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFullBlocksRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFullBlocksRequest;

  static equals(a: GetFullBlocksRequest | PlainMessage<GetFullBlocksRequest> | undefined, b: GetFullBlocksRequest | PlainMessage<GetFullBlocksRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.OKResponse
 */
export declare class OKResponse extends Message<OKResponse> {
  constructor(data?: PartialMessage<OKResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.OKResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OKResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OKResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OKResponse;

  static equals(a: OKResponse | PlainMessage<OKResponse> | undefined, b: OKResponse | PlainMessage<OKResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.BasicUser
 */
export declare class BasicUser extends Message<BasicUser> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string username = 2;
   */
  username: string;

  constructor(data?: PartialMessage<BasicUser>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.BasicUser";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicUser;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicUser;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicUser;

  static equals(a: BasicUser | PlainMessage<BasicUser> | undefined, b: BasicUser | PlainMessage<BasicUser> | undefined): boolean;
}

/**
 * @generated from message user_service.BasicFollowedUser
 */
export declare class BasicFollowedUser extends Message<BasicFollowedUser> {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * @generated from field: repeated string channel = 3;
   */
  channel: string[];

  constructor(data?: PartialMessage<BasicFollowedUser>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.BasicFollowedUser";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicFollowedUser;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicFollowedUser;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicFollowedUser;

  static equals(a: BasicFollowedUser | PlainMessage<BasicFollowedUser> | undefined, b: BasicFollowedUser | PlainMessage<BasicFollowedUser> | undefined): boolean;
}

/**
 * @generated from message user_service.GetActiveChatChannelsRequest
 */
export declare class GetActiveChatChannelsRequest extends Message<GetActiveChatChannelsRequest> {
  /**
   * @generated from field: int32 number = 1;
   */
  number: number;

  /**
   * @generated from field: int32 offset = 2;
   */
  offset: number;

  /**
   * If a tournament_id is provided, we get active chat channels (private
   * message channels) in addition to the given tournament channel.
   *
   * @generated from field: string tournament_id = 3;
   */
  tournamentId: string;

  constructor(data?: PartialMessage<GetActiveChatChannelsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetActiveChatChannelsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActiveChatChannelsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActiveChatChannelsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActiveChatChannelsRequest;

  static equals(a: GetActiveChatChannelsRequest | PlainMessage<GetActiveChatChannelsRequest> | undefined, b: GetActiveChatChannelsRequest | PlainMessage<GetActiveChatChannelsRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.ActiveChatChannels
 */
export declare class ActiveChatChannels extends Message<ActiveChatChannels> {
  /**
   * @generated from field: repeated user_service.ActiveChatChannels.Channel channels = 1;
   */
  channels: ActiveChatChannels_Channel[];

  constructor(data?: PartialMessage<ActiveChatChannels>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ActiveChatChannels";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActiveChatChannels;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActiveChatChannels;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActiveChatChannels;

  static equals(a: ActiveChatChannels | PlainMessage<ActiveChatChannels> | undefined, b: ActiveChatChannels | PlainMessage<ActiveChatChannels> | undefined): boolean;
}

/**
 * @generated from message user_service.ActiveChatChannels.Channel
 */
export declare class ActiveChatChannels_Channel extends Message<ActiveChatChannels_Channel> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * last_update is a unix timestamp, in seconds.
   *
   * @generated from field: int64 last_update = 3;
   */
  lastUpdate: bigint;

  /**
   * @generated from field: bool has_update = 4;
   */
  hasUpdate: boolean;

  /**
   * @generated from field: string last_message = 5;
   */
  lastMessage: string;

  constructor(data?: PartialMessage<ActiveChatChannels_Channel>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.ActiveChatChannels.Channel";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActiveChatChannels_Channel;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActiveChatChannels_Channel;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActiveChatChannels_Channel;

  static equals(a: ActiveChatChannels_Channel | PlainMessage<ActiveChatChannels_Channel> | undefined, b: ActiveChatChannels_Channel | PlainMessage<ActiveChatChannels_Channel> | undefined): boolean;
}

/**
 * @generated from message user_service.GetChatsRequest
 */
export declare class GetChatsRequest extends Message<GetChatsRequest> {
  /**
   * @generated from field: string channel = 1;
   */
  channel: string;

  constructor(data?: PartialMessage<GetChatsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetChatsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChatsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChatsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChatsRequest;

  static equals(a: GetChatsRequest | PlainMessage<GetChatsRequest> | undefined, b: GetChatsRequest | PlainMessage<GetChatsRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.GetFollowsResponse
 */
export declare class GetFollowsResponse extends Message<GetFollowsResponse> {
  /**
   * @generated from field: repeated user_service.BasicFollowedUser users = 1;
   */
  users: BasicFollowedUser[];

  constructor(data?: PartialMessage<GetFollowsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetFollowsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFollowsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFollowsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFollowsResponse;

  static equals(a: GetFollowsResponse | PlainMessage<GetFollowsResponse> | undefined, b: GetFollowsResponse | PlainMessage<GetFollowsResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.GetBlocksResponse
 */
export declare class GetBlocksResponse extends Message<GetBlocksResponse> {
  /**
   * @generated from field: repeated user_service.BasicUser users = 1;
   */
  users: BasicUser[];

  constructor(data?: PartialMessage<GetBlocksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetBlocksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBlocksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBlocksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBlocksResponse;

  static equals(a: GetBlocksResponse | PlainMessage<GetBlocksResponse> | undefined, b: GetBlocksResponse | PlainMessage<GetBlocksResponse> | undefined): boolean;
}

/**
 * XXX: We should eventually obsolete this and handle blocks purely on
 * the backend but we need to write a lot of hard code for that.
 *
 * @generated from message user_service.GetFullBlocksResponse
 */
export declare class GetFullBlocksResponse extends Message<GetFullBlocksResponse> {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];

  constructor(data?: PartialMessage<GetFullBlocksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetFullBlocksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFullBlocksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFullBlocksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFullBlocksResponse;

  static equals(a: GetFullBlocksResponse | PlainMessage<GetFullBlocksResponse> | undefined, b: GetFullBlocksResponse | PlainMessage<GetFullBlocksResponse> | undefined): boolean;
}

/**
 * @generated from message user_service.GetModListRequest
 */
export declare class GetModListRequest extends Message<GetModListRequest> {
  constructor(data?: PartialMessage<GetModListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetModListRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetModListRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetModListRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetModListRequest;

  static equals(a: GetModListRequest | PlainMessage<GetModListRequest> | undefined, b: GetModListRequest | PlainMessage<GetModListRequest> | undefined): boolean;
}

/**
 * @generated from message user_service.GetModListResponse
 */
export declare class GetModListResponse extends Message<GetModListResponse> {
  /**
   * @generated from field: repeated string admin_user_ids = 1;
   */
  adminUserIds: string[];

  /**
   * @generated from field: repeated string mod_user_ids = 2;
   */
  modUserIds: string[];

  constructor(data?: PartialMessage<GetModListResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "user_service.GetModListResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetModListResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetModListResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetModListResponse;

  static equals(a: GetModListResponse | PlainMessage<GetModListResponse> | undefined, b: GetModListResponse | PlainMessage<GetModListResponse> | undefined): boolean;
}

