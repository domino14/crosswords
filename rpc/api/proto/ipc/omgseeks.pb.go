// Definitions for OMGWord seek functionality.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: api/proto/ipc/omgseeks.proto

package ipc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeekState int32

const (
	SeekState_ABSENT  SeekState = 0
	SeekState_PRESENT SeekState = 1
	SeekState_READY   SeekState = 2
)

// Enum value maps for SeekState.
var (
	SeekState_name = map[int32]string{
		0: "ABSENT",
		1: "PRESENT",
		2: "READY",
	}
	SeekState_value = map[string]int32{
		"ABSENT":  0,
		"PRESENT": 1,
		"READY":   2,
	}
)

func (x SeekState) Enum() *SeekState {
	p := new(SeekState)
	*p = x
	return p
}

func (x SeekState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeekState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_ipc_omgseeks_proto_enumTypes[0].Descriptor()
}

func (SeekState) Type() protoreflect.EnumType {
	return &file_api_proto_ipc_omgseeks_proto_enumTypes[0]
}

func (x SeekState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeekState.Descriptor instead.
func (SeekState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{0}
}

// A MatchUser requests or receives a match via a seek or a match request.
type MatchUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the database, or anonymous, ID of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// relevant_rating is the rating of the user, for the relevant seek mode.
	RelevantRating string `protobuf:"bytes,2,opt,name=relevant_rating,json=relevantRating,proto3" json:"relevant_rating,omitempty"`
	// if is_anonymous, backend won't bother to look up the user in the DB.
	IsAnonymous bool `protobuf:"varint,3,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous,omitempty"`
	// display_name is the display username of the user (could be real name too)
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *MatchUser) Reset() {
	*x = MatchUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUser) ProtoMessage() {}

func (x *MatchUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUser.ProtoReflect.Descriptor instead.
func (*MatchUser) Descriptor() ([]byte, []int) {
	return file_api_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{0}
}

func (x *MatchUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MatchUser) GetRelevantRating() string {
	if x != nil {
		return x.RelevantRating
	}
	return ""
}

func (x *MatchUser) GetIsAnonymous() bool {
	if x != nil {
		return x.IsAnonymous
	}
	return false
}

func (x *MatchUser) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type SeekRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRequest        *GameRequest `protobuf:"bytes,1,opt,name=game_request,json=gameRequest,proto3" json:"game_request,omitempty"`
	User               *MatchUser   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	MinimumRatingRange int32        `protobuf:"varint,3,opt,name=minimum_rating_range,json=minimumRatingRange,proto3" json:"minimum_rating_range,omitempty"`
	MaximumRatingRange int32        `protobuf:"varint,4,opt,name=maximum_rating_range,json=maximumRatingRange,proto3" json:"maximum_rating_range,omitempty"`
	// connection_id is the websocket ID via which this game was requested.
	SeekerConnectionId   string     `protobuf:"bytes,5,opt,name=seeker_connection_id,json=seekerConnectionId,proto3" json:"seeker_connection_id,omitempty"`
	ReceivingUser        *MatchUser `protobuf:"bytes,6,opt,name=receiving_user,json=receivingUser,proto3" json:"receiving_user,omitempty"`
	UserState            SeekState  `protobuf:"varint,7,opt,name=user_state,json=userState,proto3,enum=ipc.SeekState" json:"user_state,omitempty"`
	ReceiverState        SeekState  `protobuf:"varint,8,opt,name=receiver_state,json=receiverState,proto3,enum=ipc.SeekState" json:"receiver_state,omitempty"`
	ReceiverConnectionId string     `protobuf:"bytes,9,opt,name=receiver_connection_id,json=receiverConnectionId,proto3" json:"receiver_connection_id,omitempty"`
	BootedReceivers      []string   `protobuf:"bytes,10,rep,name=booted_receivers,json=bootedReceivers,proto3" json:"booted_receivers,omitempty"`
	// rematch_for is the game ID that this Match Request is a rematch for (empty
	// if it isn't a rematch)
	RematchFor string `protobuf:"bytes,11,opt,name=rematch_for,json=rematchFor,proto3" json:"rematch_for,omitempty"`
	// If this match request is part of a tournament, it is treated in a special
	// way. We are moving towards server-only matching during tournaments,
	// so the following will only be used in "clubhouse mode" / more free-form
	// clubs.
	TournamentId        string `protobuf:"bytes,12,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
	ReceiverIsPermanent bool   `protobuf:"varint,13,opt,name=receiver_is_permanent,json=receiverIsPermanent,proto3" json:"receiver_is_permanent,omitempty"`
	RatingKey           string `protobuf:"bytes,14,opt,name=rating_key,json=ratingKey,proto3" json:"rating_key,omitempty"`
}

func (x *SeekRequest) Reset() {
	*x = SeekRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekRequest) ProtoMessage() {}

func (x *SeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekRequest.ProtoReflect.Descriptor instead.
func (*SeekRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{1}
}

func (x *SeekRequest) GetGameRequest() *GameRequest {
	if x != nil {
		return x.GameRequest
	}
	return nil
}

func (x *SeekRequest) GetUser() *MatchUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SeekRequest) GetMinimumRatingRange() int32 {
	if x != nil {
		return x.MinimumRatingRange
	}
	return 0
}

func (x *SeekRequest) GetMaximumRatingRange() int32 {
	if x != nil {
		return x.MaximumRatingRange
	}
	return 0
}

func (x *SeekRequest) GetSeekerConnectionId() string {
	if x != nil {
		return x.SeekerConnectionId
	}
	return ""
}

func (x *SeekRequest) GetReceivingUser() *MatchUser {
	if x != nil {
		return x.ReceivingUser
	}
	return nil
}

func (x *SeekRequest) GetUserState() SeekState {
	if x != nil {
		return x.UserState
	}
	return SeekState_ABSENT
}

func (x *SeekRequest) GetReceiverState() SeekState {
	if x != nil {
		return x.ReceiverState
	}
	return SeekState_ABSENT
}

func (x *SeekRequest) GetReceiverConnectionId() string {
	if x != nil {
		return x.ReceiverConnectionId
	}
	return ""
}

func (x *SeekRequest) GetBootedReceivers() []string {
	if x != nil {
		return x.BootedReceivers
	}
	return nil
}

func (x *SeekRequest) GetRematchFor() string {
	if x != nil {
		return x.RematchFor
	}
	return ""
}

func (x *SeekRequest) GetTournamentId() string {
	if x != nil {
		return x.TournamentId
	}
	return ""
}

func (x *SeekRequest) GetReceiverIsPermanent() bool {
	if x != nil {
		return x.ReceiverIsPermanent
	}
	return false
}

func (x *SeekRequest) GetRatingKey() string {
	if x != nil {
		return x.RatingKey
	}
	return ""
}

// A SoughtGameProcessEvent gets sent when a match request (or seek request)
// get accepted (from client to server), or canceled -- when sent from server to
// client.
type SoughtGameProcessEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *SoughtGameProcessEvent) Reset() {
	*x = SoughtGameProcessEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoughtGameProcessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoughtGameProcessEvent) ProtoMessage() {}

func (x *SoughtGameProcessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoughtGameProcessEvent.ProtoReflect.Descriptor instead.
func (*SoughtGameProcessEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{2}
}

func (x *SoughtGameProcessEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// SeekRequests sends all open seek requests.
type SeekRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*SeekRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *SeekRequests) Reset() {
	*x = SeekRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekRequests) ProtoMessage() {}

func (x *SeekRequests) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekRequests.ProtoReflect.Descriptor instead.
func (*SeekRequests) Descriptor() ([]byte, []int) {
	return file_api_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{3}
}

func (x *SeekRequests) GetRequests() []*SeekRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

// When a Receiver declines a Seeker:
type DeclineSeekRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *DeclineSeekRequest) Reset() {
	*x = DeclineSeekRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineSeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineSeekRequest) ProtoMessage() {}

func (x *DeclineSeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_ipc_omgseeks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineSeekRequest.ProtoReflect.Descriptor instead.
func (*DeclineSeekRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{4}
}

func (x *DeclineSeekRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

var File_api_proto_ipc_omgseeks_proto protoreflect.FileDescriptor

var file_api_proto_ipc_omgseeks_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x70, 0x63, 0x2f,
	0x6f, 0x6d, 0x67, 0x73, 0x65, 0x65, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x69, 0x70, 0x63, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69,
	0x70, 0x63, 0x2f, 0x6f, 0x6d, 0x67, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65,
	0x76, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x05, 0x0a, 0x0b, 0x53, 0x65, 0x65, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x69, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x70, 0x63,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x65, 0x6b, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x65, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x69, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x0e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6f, 0x6f,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f, 0x6f, 0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x66, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x46, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x37, 0x0a,
	0x16, 0x53, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0c, 0x53, 0x65, 0x65, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x70, 0x63, 0x2e, 0x53,
	0x65, 0x65, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x65, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x2a, 0x2f, 0x0a, 0x09, 0x53, 0x65, 0x65,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x42, 0x53, 0x45, 0x4e, 0x54,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x31,
	0x34, 0x2f, 0x6c, 0x69, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_proto_ipc_omgseeks_proto_rawDescOnce sync.Once
	file_api_proto_ipc_omgseeks_proto_rawDescData = file_api_proto_ipc_omgseeks_proto_rawDesc
)

func file_api_proto_ipc_omgseeks_proto_rawDescGZIP() []byte {
	file_api_proto_ipc_omgseeks_proto_rawDescOnce.Do(func() {
		file_api_proto_ipc_omgseeks_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_ipc_omgseeks_proto_rawDescData)
	})
	return file_api_proto_ipc_omgseeks_proto_rawDescData
}

var file_api_proto_ipc_omgseeks_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_ipc_omgseeks_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_proto_ipc_omgseeks_proto_goTypes = []interface{}{
	(SeekState)(0),                 // 0: ipc.SeekState
	(*MatchUser)(nil),              // 1: ipc.MatchUser
	(*SeekRequest)(nil),            // 2: ipc.SeekRequest
	(*SoughtGameProcessEvent)(nil), // 3: ipc.SoughtGameProcessEvent
	(*SeekRequests)(nil),           // 4: ipc.SeekRequests
	(*DeclineSeekRequest)(nil),     // 5: ipc.DeclineSeekRequest
	(*GameRequest)(nil),            // 6: ipc.GameRequest
}
var file_api_proto_ipc_omgseeks_proto_depIdxs = []int32{
	6, // 0: ipc.SeekRequest.game_request:type_name -> ipc.GameRequest
	1, // 1: ipc.SeekRequest.user:type_name -> ipc.MatchUser
	1, // 2: ipc.SeekRequest.receiving_user:type_name -> ipc.MatchUser
	0, // 3: ipc.SeekRequest.user_state:type_name -> ipc.SeekState
	0, // 4: ipc.SeekRequest.receiver_state:type_name -> ipc.SeekState
	2, // 5: ipc.SeekRequests.requests:type_name -> ipc.SeekRequest
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_proto_ipc_omgseeks_proto_init() }
func file_api_proto_ipc_omgseeks_proto_init() {
	if File_api_proto_ipc_omgseeks_proto != nil {
		return
	}
	file_api_proto_ipc_omgwords_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_ipc_omgseeks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_ipc_omgseeks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeekRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_ipc_omgseeks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoughtGameProcessEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_ipc_omgseeks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeekRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_ipc_omgseeks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineSeekRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_ipc_omgseeks_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_ipc_omgseeks_proto_goTypes,
		DependencyIndexes: file_api_proto_ipc_omgseeks_proto_depIdxs,
		EnumInfos:         file_api_proto_ipc_omgseeks_proto_enumTypes,
		MessageInfos:      file_api_proto_ipc_omgseeks_proto_msgTypes,
	}.Build()
	File_api_proto_ipc_omgseeks_proto = out.File
	file_api_proto_ipc_omgseeks_proto_rawDesc = nil
	file_api_proto_ipc_omgseeks_proto_goTypes = nil
	file_api_proto_ipc_omgseeks_proto_depIdxs = nil
}
